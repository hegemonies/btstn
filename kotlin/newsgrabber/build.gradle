buildscript {
	ext {
		kotlinVersion = "1.4.21"
		exposedVersion = "0.29.1"
		springCloudVersion = "2020.0.2"
	}
}

plugins {
	id "org.springframework.boot" version "2.4.4"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "org.jetbrains.kotlin.jvm" version "1.4.31"
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.4.31'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.4.31'
	id "org.springframework.experimental.aot" version "0.9.1"
}

group = "org.bravo"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

configurations {
	compileOnly {
		extendsFrom(configurations.annotationProcessor)
	}
}

repositories {
	maven { url = uri("https://repo.spring.io/release") }
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-amqp")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.springframework.cloud:spring-cloud-starter-config")
	runtimeOnly("org.postgresql:postgresql")
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.amqp:spring-rabbit-test")
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
	}
}

compileKotlin {
	kotlinOptions.jvmTarget = "11"
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = "paketobuildpacks/builder:tiny"
	environment = [BP_NATIVE_IMAGE: true]
}
