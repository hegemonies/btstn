buildscript {
    ext {
        ktorVersion = "1.6.8"
        kotlinVersion = "1.7.10"
        logbackVersion = "1.2.11"
        exposedVersion = "0.38.2"
    }
}

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"
    id "com.google.cloud.tools.jib" version "3.2.1"
}

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

dependencies {
    implementation(
            // Kotlin standard library
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",

            // Logger library
            "ch.qos.logback:logback-classic:$logbackVersion",

            // HTTP server library - Ktor
            "io.ktor:ktor-server-netty:$ktorVersion",
            "io.ktor:ktor-metrics:$ktorVersion",
            "io.ktor:ktor-server-core:$ktorVersion",
            "io.ktor:ktor-server-host-common:$ktorVersion",

            // JSON library
            "io.ktor:ktor-jackson:$ktorVersion",

            // Database library
            "org.jetbrains.exposed:exposed-core:$exposedVersion",
            "org.jetbrains.exposed:exposed-dao:$exposedVersion",
            "org.jetbrains.exposed:exposed-jdbc:$exposedVersion",

            // Postgresql driver
            'org.postgresql:postgresql:42.3.6',

            // ArrowKt
            'io.arrow-kt:arrow-core:1.1.2',

            // DTO
            project(":kotlin-dto"),
    )
    testImplementation "io.ktor:ktor-server-tests:$ktorVersion"
}

jib {
    to {
        image = "btstn/api-proxy:dev"
    }
    from {
        image = "azul/zulu-openjdk:17.0.2"
    }
    container {
        user = "1000"
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
    allowInsecureRegistries = true
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

repositories {
    mavenLocal()
    mavenCentral()
}
