plugins {
    id "org.springframework.boot" version "2.4.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.5.0"
    id 'org.jetbrains.kotlin.plugin.spring' version '1.5.0'
    id "org.jetbrains.kotlin.kapt" version "1.5.0"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.5.0"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.5.0"

//    id "org.springframework.experimental.aot" version "0.9.1"
}

group = "org.bravo"
version = "0.0.1"
java.sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor)
    }
}

dependencies {
    implementation(
            // Spring
            "org.springframework.boot:spring-boot-starter-amqp",
            "org.springframework.boot:spring-boot-starter-data-jpa",

            // Kotlin
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3",
            "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.0",

            "org.hibernate:hibernate-validator:7.0.1.Final",
    )

    runtimeOnly("org.postgresql:postgresql")

    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    kapt("org.springframework.boot:spring-boot-configuration-processor")

    testImplementation(
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.amqp:spring-rabbit-test",
    )
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

test {
    useJUnitPlatform()
}
